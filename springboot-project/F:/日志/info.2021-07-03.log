Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 62433 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2da59753: startup date [Sat Jul 03 01:58:53 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4260 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2da59753: startup date [Sat Jul 03 01:58:53 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public com.lly835.bestpay.model.PayResponse com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 13.841 seconds (JVM running for 15.535)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 47 ms
HHH000397: Using ASTQueryTranslatorFactory
SQL Error: 1048, SQLState: 23000
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2da59753: startup date [Sat Jul 03 01:58:53 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closing ...
{dataSource-1} closed
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 62458 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@542e560f: startup date [Sat Jul 03 02:02:12 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3070 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@542e560f: startup date [Sat Jul 03 02:02:12 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public com.lly835.bestpay.model.PayResponse com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 9.146 seconds (JVM running for 10.802)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
SQL Error: 1048, SQLState: 23000
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@542e560f: startup date [Sat Jul 03 02:02:12 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closing ...
{dataSource-1} closed
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 62466 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2002348: startup date [Sat Jul 03 02:03:14 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3263 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2002348: startup date [Sat Jul 03 02:03:14 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public com.lly835.bestpay.model.PayResponse com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 9.05 seconds (JVM running for 10.641)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 24 ms
HHH000397: Using ASTQueryTranslatorFactory
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2002348: startup date [Sat Jul 03 02:03:14 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closing ...
{dataSource-1} closed
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 62480 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2eee3069: startup date [Sat Jul 03 02:09:52 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3568 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2eee3069: startup date [Sat Jul 03 02:09:52 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public com.lly835.bestpay.model.PayResponse com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 11.165 seconds (JVM running for 12.692)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 138 ms
HHH000397: Using ASTQueryTranslatorFactory
图片上传成功
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2eee3069: startup date [Sat Jul 03 02:09:52 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closing ...
{dataSource-1} closed
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 62506 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2eee3069: startup date [Sat Jul 03 02:17:02 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2878 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2eee3069: startup date [Sat Jul 03 02:17:02 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public com.lly835.bestpay.model.PayResponse com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 9.02 seconds (JVM running for 10.642)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 26 ms
HHH000397: Using ASTQueryTranslatorFactory
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2eee3069: startup date [Sat Jul 03 02:17:02 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closing ...
{dataSource-1} closed
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 62515 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@54c62d71: startup date [Sat Jul 03 02:21:09 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2765 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@54c62d71: startup date [Sat Jul 03 02:21:09 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public com.lly835.bestpay.model.PayResponse com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 10.141 seconds (JVM running for 12.183)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 26 ms
HHH000397: Using ASTQueryTranslatorFactory
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fbdb2jq.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fbdb2jq.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_5oN0nfqToLo7amqaW1SgeB2d-rnJWAZ8V2hIkqh-bvJ5BfbME8MH9qjl7LkMQ53N_guFk_YwK9V3Ouh27r7cMA",
  "expiresIn": 7200,
  "refreshToken": "46_XgfOC4Lzgr5YrtibhS7-nivA3cLE6UagY3LYkBuBumwH1EwcUzAs1gG_EqY24ksrR2uWpD-ZBlG5pRRYnjonww",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://bdb2jq.natappfree.cc
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fbdb2jq.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fbdb2jq.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_9qACZkHPxu1e4bd0o96zr4nVTdpQp_0o1EXcuuJXqwwVeYcbnuseQ11nZ1lW22S8pgrQUmRjx26-765ZMfB_VA",
  "expiresIn": 7200,
  "refreshToken": "46_uLWGKYY3Q5AAMciaR1UXiGTZbW8a0wCMjAEcvRGn6Fzv5lMBTXhXaqvH3bvYrV7wsDp515u_JpXMytNCEEwJ8w",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://bdb2jq.natappfree.cc
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "25",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625250800",
  "nonceStr": "eqoGHYlk1R9qaHBt",
  "packAge": "prepay_id\u003dwx0302332139019196181698a7b8d8720000",
  "signType": "MD5",
  "paySign": "8C379A2D4F039632E79CB709870EE509"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "26",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625251017",
  "nonceStr": "pJhneq08kj9OhXQb",
  "packAge": "prepay_id\u003dwx030236582073403100c3a52fde41640000",
  "signType": "MD5",
  "paySign": "1F4FE5BAFD4D167800B778E7C12A3434"
}
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@54c62d71: startup date [Sat Jul 03 02:21:09 CST 2021]; root of context hierarchy
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 62649 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@b1712f3: startup date [Sat Jul 03 03:08:26 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3700 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@b1712f3: startup date [Sat Jul 03 03:08:26 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 11.046 seconds (JVM running for 12.273)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 24 ms
HHH000397: Using ASTQueryTranslatorFactory
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@b1712f3: startup date [Sat Jul 03 03:08:26 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closing ...
{dataSource-1} closed
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 62667 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2f17e30d: startup date [Sat Jul 03 03:18:28 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3571 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2f17e30d: startup date [Sat Jul 03 03:18:28 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 10.028 seconds (JVM running for 11.298)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms
HHH000397: Using ASTQueryTranslatorFactory
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2f17e30d: startup date [Sat Jul 03 03:18:28 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closing ...
{dataSource-1} closed
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 63014 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@542e560f: startup date [Sat Jul 03 13:21:07 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 15115 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@542e560f: startup date [Sat Jul 03 13:21:07 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[POST]}" onto public java.lang.String com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 32.343 seconds (JVM running for 34.8)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fkpi6pb.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fkpi6pb.natappfree.cc#wechat_redirect
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fkpi6pb.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fkpi6pb.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_q3x33MsRdwC2C07oxADpt-kmR4BieQCMtVJM0jNhy26lI61hmBpq3lsGNP-DbISs2S_cLR3Dd45cn6QgBGoeRQ",
  "expiresIn": 7200,
  "refreshToken": "46_Q8fVyuMRARDdmB6YTBQPC2FuATYMYdB7QnEth0vcROETkJgGwsBXpZXXzPc71jHOfumHSUJ93aes6-tRKHvBOg",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://kpi6pb.natappfree.cc
HHH000397: Using ASTQueryTranslatorFactory
Request method 'GET' not supported
Request method 'GET' not supported
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@542e560f: startup date [Sat Jul 03 13:21:07 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closing ...
{dataSource-1} closed
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 63034 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fc258b1: startup date [Sat Jul 03 13:29:24 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3952 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fc258b1: startup date [Sat Jul 03 13:29:24 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[POST]}" onto public java.lang.String com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 14.074 seconds (JVM running for 16.124)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 34 ms
HHH000397: Using ASTQueryTranslatorFactory
Request method 'GET' not supported
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fc258b1: startup date [Sat Jul 03 13:29:24 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closing ...
{dataSource-1} closed
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 63050 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@48d5f34e: startup date [Sat Jul 03 13:31:24 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2963 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@48d5f34e: startup date [Sat Jul 03 13:31:24 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public java.lang.String com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 12.531 seconds (JVM running for 14.283)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fkpi6pb.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fkpi6pb.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_WWC7DRmaKjpWMcTGcPoqS1VEGu7jyxnDKj3XaFU4C00xApRdCsWiBspjVym06trXjgl-idj1mtsC9nVmBSaKzQ",
  "expiresIn": 7200,
  "refreshToken": "46_DA8s6A_Cdev1oBIZUTg7MmBuyplV0T7rwEWCcpGVURQzca3Rg_8dNxVkkuizUp3S3wP-IA6WKrXopqjFdg6Adw",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://kpi6pb.natappfree.cc
HHH000397: Using ASTQueryTranslatorFactory
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@48d5f34e: startup date [Sat Jul 03 13:31:24 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closing ...
{dataSource-1} closed
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 63063 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4af0df05: startup date [Sat Jul 03 13:34:13 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3065 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4af0df05: startup date [Sat Jul 03 13:34:13 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public java.lang.String com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 11.189 seconds (JVM running for 12.937)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 44 ms
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fkpi6pb.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fkpi6pb.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_Xu6kSMP-xGGM3PfHaZjCeg_9iflt7ZCEq880s_ExeYV9aqWQU_ktEhp7KN88QqME7J9wsiU_O3lSquEn4ZLQaQ",
  "expiresIn": 7200,
  "refreshToken": "46_2D_BjOhZ3_k6YFt7E1g_kj3TcqnP7Wto4LfXv8VDIoyWBtT4IyIWe5zn03q8hIvH_TCmvEdCJpEk0oDkzMivmQ",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://kpi6pb.natappfree.cc
HHH000397: Using ASTQueryTranslatorFactory
wxMpOAuth2AccessToken={
  "accessToken": "46_64JkekWHboHAiZ3P24sAuTSRmV0dv0ebrfSGMXRaaGlyD3k2IOuSz5BTuC5l6j6Z_5GXoX5JMiWoDEa7vU8wWAAG68lbBFGWqz3WiHTK3Zs",
  "expiresIn": 7200,
  "refreshToken": "46_LG9O3NKrWwCQc1GSAWgbfC2pnOgjv6bFQ0LSuRZQKggEnjQtmsFxPrwLETVlw8w3Q6V4jqsAR4O5FC3pLpnmr7Ex6njKXCCHPQjV3L_ginw",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://kpi6pb.natappfree.cc
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "34",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625290519",
  "nonceStr": "4SsZaRnoRsOsXMnP",
  "packAge": "prepay_id\u003dwx031335190319719213f5498b259a260000",
  "signType": "MD5",
  "paySign": "D41464989B82CC1117FF2E5E6CD60C70"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "35",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625290576",
  "nonceStr": "thq718wfbTk62uVI",
  "packAge": "prepay_id\u003dwx031336160091868639079657aca6cd0000",
  "signType": "MD5",
  "paySign": "FACC6304A4CDE48FD3FA792683CA2926"
}
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4af0df05: startup date [Sat Jul 03 13:34:13 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closing ...
{dataSource-1} closed
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 63070 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2eee3069: startup date [Sat Jul 03 13:38:37 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3576 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2eee3069: startup date [Sat Jul 03 13:38:37 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 12.909 seconds (JVM running for 14.149)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fkpi6pb.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fkpi6pb.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_qa2OwvcteXSLi4HsBS2AM2U77IgIoH8WrUoHBTd_oyF6eYDIPbFmKziJjZbAK9ayJ5tgGMqnRMhQFGcMujccqA",
  "expiresIn": 7200,
  "refreshToken": "46_jKxGIqrIFkvj_ZM7H9b4RhM_60ekOTdx1GiND5xKWnC89EmMtMrtC_nqVnuDot2J1tY3QpOHqEKRY6lVy2CIRA",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://kpi6pb.natappfree.cc
HHH000397: Using ASTQueryTranslatorFactory
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "36",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625290771",
  "nonceStr": "6qmmUME5DbrLFYr0",
  "packAge": "prepay_id\u003dwx031339318586020f1900d1e7491f680000",
  "signType": "MD5",
  "paySign": "567B6C56C9E39C810D46619942FD03C1"
}
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2eee3069: startup date [Sat Jul 03 13:38:37 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closing ...
{dataSource-1} closed
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 63085 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@45fd9a4d: startup date [Sat Jul 03 13:41:22 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3874 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@45fd9a4d: startup date [Sat Jul 03 13:41:22 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public java.lang.String com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 15.767 seconds (JVM running for 17.299)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 49 ms
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fkpi6pb.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fkpi6pb.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_iIentiF-BwlqX7cSk99GEKUQlHdHX2OL7eHfTI0Kp0gOnR1rnEiJYdRe2cfm9MCgFZGuhAlEp_0-oVtl0QHxyA",
  "expiresIn": 7200,
  "refreshToken": "46_iIentiF-BwlqX7cSk99GEDISbsg6l6plSvb4lwmg9Vtau49DM0mKMZqeztBdUmayCOjNylNZIz6xECpChiLxTg",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://kpi6pb.natappfree.cc
HHH000397: Using ASTQueryTranslatorFactory
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "37",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625290964",
  "nonceStr": "IWqBV0ysQITS4Dtl",
  "packAge": "prepay_id\u003dwx03134244788318774bf811527e27e70000",
  "signType": "MD5",
  "paySign": "A259E28FD5E3896938995479C95D765A"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "40",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625291436",
  "nonceStr": "QKokD1P6LONtbN0Z",
  "packAge": "prepay_id\u003dwx03135036318868f984e51d3a60f05a0000",
  "signType": "MD5",
  "paySign": "5794EEC717C30F2F9E3EA862D21AA50B"
}
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@45fd9a4d: startup date [Sat Jul 03 13:41:22 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closing ...
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 63131 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@64b73e7a: startup date [Sat Jul 03 13:52:38 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3380 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@64b73e7a: startup date [Sat Jul 03 13:52:38 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 15.921 seconds (JVM running for 17.313)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fkpi6pb.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fkpi6pb.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_W3NI3jbOKtF94OZXo5817GR4ckU-OPJW8twtS9b7BF9d5w-78Od4g-1QOkZbrRzpISINyylMAomZCOrk_5WiVw",
  "expiresIn": 7200,
  "refreshToken": "46_q3x33MsRdwC2C07oxADpt552ZEqoHjfU4MHkcOpemxBN5I2lkNBzntTylBxekCTWVrRG9f9UYdmPN3kYRb1hrg",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://kpi6pb.natappfree.cc
HHH000397: Using ASTQueryTranslatorFactory
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "41",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625291612",
  "nonceStr": "K5z7JqhBeKNaiwIA",
  "packAge": "prepay_id\u003dwx03135332468263f363f47c109f4bd50000",
  "signType": "MD5",
  "paySign": "20833E8512759BD5D40906BAB5755E6D"
}
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@64b73e7a: startup date [Sat Jul 03 13:52:38 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closing ...
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 63160 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2da59753: startup date [Sat Jul 03 13:54:57 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 5139 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2da59753: startup date [Sat Jul 03 13:54:57 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 15.385 seconds (JVM running for 16.608)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fkpi6pb.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fkpi6pb.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_jKxGIqrIFkvj_ZM7H9b4RjM87vwIogYGB8dtrVkx8D3wB0Hbyza3DJ_bSn0aLG8mHIeCxPvA6wJzBufrEpqjpA",
  "expiresIn": 7200,
  "refreshToken": "46_FXWFtTS2vQtdg9ndwYplW-napzzB2diFchsGyd1VbsNzPUvVXNXztXWWctdFk6fT2rRug2SfrMzsml3p_Oz9Mg",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://kpi6pb.natappfree.cc
HHH000397: Using ASTQueryTranslatorFactory
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "42",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625291758",
  "nonceStr": "2KyLA3RCMrSBupFQ",
  "packAge": "prepay_id\u003dwx03135557869793bbd5362e798b20be0000",
  "signType": "MD5",
  "paySign": "8A19B17DB0C05084AD7D14EEBFC526B9"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "43",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625291958",
  "nonceStr": "OEUq3yHthE7dndWQ",
  "packAge": "prepay_id\u003dwx0313591830499415d282132693ea720000",
  "signType": "MD5",
  "paySign": "D64770A08035A662D681FBF3BDB351DE"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "44",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625292051",
  "nonceStr": "udNMkJ38Jn3uQhu9",
  "packAge": "prepay_id\u003dwx031400511693453e51a2ed5d8e53dd0000",
  "signType": "MD5",
  "paySign": "3344B64304108284E0FDE6D36FFC5D18"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "44",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625292203",
  "nonceStr": "ZvjFWHHUCwGSU4h1",
  "packAge": "prepay_id\u003dwx031403233572623e51a2ed5d8d4aee0000",
  "signType": "MD5",
  "paySign": "31A6FDBC8661CFAA60F9F256D22E6F10"
}
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fkpi6pb.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fkpi6pb.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_1xpKYTSTuMnZy7kYiLJxXqtSNtto5ba33UNV-7AVLFsve6pj2GvDiuZxa3yNB31Biz7IYtbNP-XP6OW2NbUZaA",
  "expiresIn": 7200,
  "refreshToken": "46_XfbWTUDcCqVH6ZRhYxNwOkhomGeyzAbfMlmySqKxNkXwz4JcTAAWuaBYg-jMHJqEcV8dmmmFNfMWWEhm2UuJtg",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://kpi6pb.natappfree.cc
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "45",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625292250",
  "nonceStr": "da3Fuf0fFUFRIgJN",
  "packAge": "prepay_id\u003dwx0314041017423734337edf514d8d630000",
  "signType": "MD5",
  "paySign": "895A6008AFB486A4BBE57472E08F6367"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "46",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625292649",
  "nonceStr": "lc1ug96YmFfJPFTh",
  "packAge": "prepay_id\u003dwx0314104956052015013d79597e48390000",
  "signType": "MD5",
  "paySign": "CC904E371B6F2B3B6CF788E465738F15"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "46",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fkpi6pb.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fkpi6pb.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_kd0wg9GpgKDXG3SWf8rjK1IHXo6FJwP075WV047hqx7zi3v8cQYDtpl2wPJzX5pnKuZfmfVhYI4N_bKtU_JdfQ",
  "expiresIn": 7200,
  "refreshToken": "46_AOhw9ctdo5NI3ggD_LgrXw_s--s-0dw4XazbZiHU4ORQO0CkqYB8YJLt67fmN5TXC_2ewM0HCjiUUzw85GC98A",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://kpi6pb.natappfree.cc
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "47",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625293262",
  "nonceStr": "guYQmSCUuyd8t3xq",
  "packAge": "prepay_id\u003dwx03142102523546f1f5bf61d73db1740000",
  "signType": "MD5",
  "paySign": "BE3409FC5C2CDD4C6C103F63AA72556A"
}
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2da59753: startup date [Sat Jul 03 13:54:57 CST 2021]; root of context hierarchy
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 63347 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4fce136b: startup date [Sat Jul 03 14:31:31 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4148 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4fce136b: startup date [Sat Jul 03 14:31:31 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public com.lly835.bestpay.model.PayResponse com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 13.557 seconds (JVM running for 14.761)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 24 ms
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fkpi6pb.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fkpi6pb.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_rOPhmHJYPSMt_1liEAm1NAF6DI8sndzypJfq8cLTXqZkhBYUNHLMOrcw-GJdgUlYuoF-vyEgmSeGQIyHm_uDTw",
  "expiresIn": 7200,
  "refreshToken": "46_8hued36hA8ay6-kxmkGOgoktvk5ksvqWroGx4s0BwgUfju5cCCti5JPmiS5jMXamC61FMeguGnZyDMwPUAW2cg",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://kpi6pb.natappfree.cc
HHH000397: Using ASTQueryTranslatorFactory
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fkpi6pb.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fkpi6pb.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_WfJyOV7U4jIDTe0rS_MoWQt1EVjK5p3bUu1MpH-U6y_b6Esz3z3vRQpIC-XZ8lV3-6FEbZY-9dsV8q3VNaPoRA",
  "expiresIn": 7200,
  "refreshToken": "46_RP1Ie29VtR2A6hAjpcaTSbJQE3zEREdg6eCMLvySGYO7yvPvHQBRgNorMXNeKFLwlTeBuzwUFm21W3LpafWhhg",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://kpi6pb.natappfree.cc
Request method 'POST' not supported
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4fce136b: startup date [Sat Jul 03 14:31:31 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closing ...
{dataSource-1} closed
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 63367 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@48d5f34e: startup date [Sat Jul 03 14:35:13 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4135 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@48d5f34e: startup date [Sat Jul 03 14:35:13 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[POST]}" onto public com.lly835.bestpay.model.PayResponse com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 15.055 seconds (JVM running for 16.767)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 86 ms
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fkpi6pb.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fkpi6pb.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_AOhw9ctdo5NI3ggD_LgrX9AgJ6tX9B_Q2tBELYHN7rrTkhhzrbuzBcPzh2MVrJTuSlIm0apieFREOa73Isu_gQ",
  "expiresIn": 7200,
  "refreshToken": "46_bJcf9tAkJm2COnJ9fk-0KKOIubMLzhrRMHBXiGc6g9IhihGmPMTU5sujxj7DE7s5UnSCCD9KRuaVNgVzO4eX1g",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://kpi6pb.natappfree.cc
HHH000397: Using ASTQueryTranslatorFactory
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "49",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625294170",
  "nonceStr": "Z1cg6743e1fAjrPo",
  "packAge": "prepay_id\u003dwx031436102869275dd1eea9287f8a640000",
  "signType": "MD5",
  "paySign": "BB1A778BC01586C6CB01F879679005E4"
}
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@48d5f34e: startup date [Sat Jul 03 14:35:13 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closing ...
{dataSource-1} closed
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 63391 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@64b73e7a: startup date [Sat Jul 03 14:39:29 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 5360 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@64b73e7a: startup date [Sat Jul 03 14:39:29 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[POST]}" onto public java.util.Map com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 17.782 seconds (JVM running for 19.252)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 33 ms
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fkpi6pb.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fkpi6pb.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_JyUdj951dbKOtGKUnpqPMJ5icau-CjxRh1-bc0tbT6SoKTuDUYlP_iOWEwvauh8YC0F7b9lSsuebPr9snWR5HA",
  "expiresIn": 7200,
  "refreshToken": "46_Ujiwg-TKCi0e83vLbXr7xb4MMc5n_MH9DbYpcPE1RBGJF0hIAPDGEkfikfDj-Mh5ndTgGaDGZXREuWh5rDnFLg",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://kpi6pb.natappfree.cc
HHH000397: Using ASTQueryTranslatorFactory
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "50",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625294681",
  "nonceStr": "pTSXBji9eBMpejoE",
  "packAge": "prepay_id\u003dwx03144441188734e7500884cec680ff0000",
  "signType": "MD5",
  "paySign": "816CC6C42D117A3BDFB6E8B15D88AECC"
}
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fkpi6pb.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fkpi6pb.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46__e866R3sJO-r9FVpU8LLC0hFnDd3IsTDlKBVOn6TOXahLVRtYg6iPv8mTQCd733pcpRhy3cEu0vTn_nZ7_c7GQ",
  "expiresIn": 7200,
  "refreshToken": "46_kJ_1EvyaFPdL_3a-iYXyiS__h3P7iiAf3MZW0igeIZTQRyF6dSya6ucjNnsMyLoUo5gKOeybODNDSBzWd70fAA",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://kpi6pb.natappfree.cc
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "51",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625294832",
  "nonceStr": "lf8ccCYr0ldtedvC",
  "packAge": "prepay_id\u003dwx031447127833977838bb950a155d7c0000",
  "signType": "MD5",
  "paySign": "639258D59EF671A17FD1C083AB76D23A"
}
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@64b73e7a: startup date [Sat Jul 03 14:39:29 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closing ...
{dataSource-1} closed
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 63415 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@acdb094: startup date [Sat Jul 03 14:47:55 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3267 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@acdb094: startup date [Sat Jul 03 14:47:55 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[POST]}" onto public java.util.Map com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 12.523 seconds (JVM running for 13.988)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fkpi6pb.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fkpi6pb.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_AOhw9ctdo5NI3ggD_LgrX3VSeRf4n8HKnqZ_OfJFn2AcemYpNPeIXmQMPfSJlvvLP_T2qSRl2A0_Qx6-lpHEaQ",
  "expiresIn": 7200,
  "refreshToken": "46_9F_zu_dSXiQ2hIB3ZQF7gPOw9KrYTsvhObZ7tnO8iAEgj_GiB9QyDtFTqjajFZJnStSJwgeuo135acNuUI0vqw",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://kpi6pb.natappfree.cc
HHH000397: Using ASTQueryTranslatorFactory
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "52",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625294969",
  "nonceStr": "TSyf0TOTWwgRsCiF",
  "packAge": "prepay_id\u003dwx0314492900333033e5a282a41d98080000",
  "signType": "MD5",
  "paySign": "1E9F5D6C5E5BE05A13D6D5CB075E4586"
}
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fkpi6pb.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fkpi6pb.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_ekCA37_nBPh-oOvfA8L8_tVKCrWk0FJ-1tVcuNImMIg8bCvilJyioj1suOfN4sKkCRx7FmXrhQWvzwv60zYDIA",
  "expiresIn": 7200,
  "refreshToken": "46_XuIreM9oNWj-gC_OcRy-rN0twI3EV34hbHOi8uJtHqPq4v2GDFXBskxn3L5oBKnBT0TBAbHmrhDmt4AWFg7BEg",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://kpi6pb.natappfree.cc
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@acdb094: startup date [Sat Jul 03 14:47:55 CST 2021]; root of context hierarchy
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 63527 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@48d5f34e: startup date [Sat Jul 03 15:02:16 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3551 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@48d5f34e: startup date [Sat Jul 03 15:02:16 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[POST]}" onto public java.util.Map com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 12.875 seconds (JVM running for 14.41)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 29 ms
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fkpi6pb.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fkpi6pb.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_LHoTvVMRjze4PigH7aKiQVRfQE31tXoh4RzOIIhQ2mxCukp8yLvcTyPa9pMDgW2jEypDTnJb-YoCfHeCWRozjA",
  "expiresIn": 7200,
  "refreshToken": "46_jpWP9Nww4ni4rBS55v9MoorJG8W0qzlrn-BqNavcPwANL14BchfgPQwInuZmFsnEAawrHoxlLSAfmaO8IuBuXw",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://kpi6pb.natappfree.cc
HHH000397: Using ASTQueryTranslatorFactory
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "58",
  "orderAmount": 8.8,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625296046",
  "nonceStr": "K8wCGRIlZEh2hyDZ",
  "packAge": "prepay_id\u003dwx03150725902629c806723d28a5c4e30000",
  "signType": "MD5",
  "paySign": "239DC98865D578FD7FCF1951A5267699"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "59",
  "orderAmount": 8.8,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625296092",
  "nonceStr": "ZekkeRYW2ouU6pc7",
  "packAge": "prepay_id\u003dwx03150811944298b15e4717f6043e390000",
  "signType": "MD5",
  "paySign": "535AFE10DB5F02A3A4A533956B48817C"
}
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@48d5f34e: startup date [Sat Jul 03 15:02:16 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closing ...
{dataSource-1} closed
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 63584 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6ebf0f36: startup date [Sat Jul 03 15:10:33 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3651 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6ebf0f36: startup date [Sat Jul 03 15:10:33 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create]}" onto public java.util.Map com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 14.548 seconds (JVM running for 16.321)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 36 ms
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fkpi6pb.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fkpi6pb.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_9NaOUZDj1GsEHm_ko93o_GVzFPRedos2MOf1WaMLmiywSU7PRWbxiOY0jpkQnEVZHdXIXq1UF3llDzvvu8q2Vg",
  "expiresIn": 7200,
  "refreshToken": "46_gxiLO8VGDhqhBhSTPuDXgpjyo1nuBCbFlgwTEzGETuK211SnrGNcMlWm6cZ31t40hcg8zh9BzypsnBGXMsXEkg",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://kpi6pb.natappfree.cc
HHH000397: Using ASTQueryTranslatorFactory
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "60",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625296290",
  "nonceStr": "y7OZL7yiy0QhI4c3",
  "packAge": "prepay_id\u003dwx0315113076277614e44224a7de383c0000",
  "signType": "MD5",
  "paySign": "D0BC6B027EFAC53180B55F32A2177C77"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "61",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625296359",
  "nonceStr": "uXSPU6ZPHoBIN0Jq",
  "packAge": "prepay_id\u003dwx0315123916129557af9e8f96f7146e0000",
  "signType": "MD5",
  "paySign": "DD6410FBC9CBA1CCCA6DDF368218B0D2"
}
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fkpi6pb.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fkpi6pb.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_ci_AjxkCc3fUoh7TWdjADFaSJ7B4zye1igiTpcHWPneWfxEf41WK_9yu6z2Avgms0G9SE72KivaVynT4O9kfBw",
  "expiresIn": 7200,
  "refreshToken": "46_cCfSkEnRu8X_8KemJDIbg2v6-EaRgPtrz82Y-TB0ShjHzva2Kv1pjdFtQiTQR7q31UOe_-0wI_cKt_XrrZQ8iA",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://kpi6pb.natappfree.cc
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "62",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625296701",
  "nonceStr": "7R0ftM8okf3oCfLs",
  "packAge": "prepay_id\u003dwx03151821135608d815d27c1c7c793c0000",
  "signType": "MD5",
  "paySign": "62DAF804A11249251AFBA0F6D0B2DE16"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "63",
  "orderAmount": 8.8,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625296754",
  "nonceStr": "pWHurw0NYUbIVNWt",
  "packAge": "prepay_id\u003dwx0315191425273534187b8f3ecd127a0000",
  "signType": "MD5",
  "paySign": "7A44172EEB72BCF2412123DF3D49C002"
}
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fkpi6pb.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fkpi6pb.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_Y7J3cJl-cirvev3d4_5fUGYBQ9qUUPz9_DvilZsImHVBoYqi0RqIE9xxm7fC6zc45aB6zAr0UjPp4WPgqIqt6w",
  "expiresIn": 7200,
  "refreshToken": "46_kJ_1EvyaFPdL_3a-iYXyiWWC3CVgr_g3avXJBXtYoZkm1gOHezKSqQa_yEPRIDyYWvLaaB3GUS8f2i4-LF6hwQ",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://kpi6pb.natappfree.cc
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "64",
  "orderAmount": 8.8,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625296880",
  "nonceStr": "MJD0Q4diXHkpFOwS",
  "packAge": "prepay_id\u003dwx0315212017589624982d7fa624ba950000",
  "signType": "MD5",
  "paySign": "040E0CA792E5772CF9F2D1068262D177"
}
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fkpi6pb.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fkpi6pb.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_1xpKYTSTuMnZy7kYiLJxXitfpmr1K2o2EKvQfP1jthskLVBbM3cTzCvvst7tLHoa_56o063n5NhT2Tbe1RHj_w",
  "expiresIn": 7200,
  "refreshToken": "46_Xu6kSMP-xGGM3PfHaZjCekQHROF7j79vNSt5a5OVFxuH1e7Ox-Nc03PL3Q-brc4gF4HlrHL9YoVZKQbFnbmveg",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://kpi6pb.natappfree.cc
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "65",
  "orderAmount": 14.0,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625297266",
  "nonceStr": "hxs8C2WRpMERi8qE",
  "packAge": "prepay_id\u003dwx03152746311704f0861dfaacef5a8a0000",
  "signType": "MD5",
  "paySign": "FA245B9657C8E6D4C8469D3C7631C6F4"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "66",
  "orderAmount": 14.0,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625297373",
  "nonceStr": "l26Stcc6q8IcaP7Z",
  "packAge": "prepay_id\u003dwx03152932983442dc6bb563d15862270000",
  "signType": "MD5",
  "paySign": "7DB83E59420AC2FB52758F52458607C9"
}
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fkpi6pb.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fg7jb9n.natappfree.cc#wechat_redirect
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6ebf0f36: startup date [Sat Jul 03 15:10:33 CST 2021]; root of context hierarchy
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 63872 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@48d5f34e: startup date [Sat Jul 03 15:45:16 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4035 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@48d5f34e: startup date [Sat Jul 03 15:45:16 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create]}" onto public java.util.Map com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 17.447 seconds (JVM running for 20.385)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 65 ms
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fg7jb9n.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fg7jb9n.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_xPHWNLaFOQuuQ-7oP-BJCmPf8rz4qbhoh4P9trdhgGKdoXQkB7wJ_6orKIeJqnxgzuYgLBaXsHvQzI70Xgs-eg",
  "expiresIn": 7200,
  "refreshToken": "46_-uWVR3zKRIzOGvMP89yldK2rKuRCLpJlY0VyrZOLvmTWh_V9bn0TJWo9neK5LfOQi6vy91EXuoLRlFJ8dxzscA",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://g7jb9n.natappfree.cc
HHH000397: Using ASTQueryTranslatorFactory
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "67",
  "orderAmount": 8.8,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625298417",
  "nonceStr": "qd4sAhJXi0TAxSC9",
  "packAge": "prepay_id\u003dwx031546339561132b604ea0e5a370ef0000",
  "signType": "MD5",
  "paySign": "17E5F1C9586932AF5A6880F2CCD19BC0"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "68",
  "orderAmount": 14.0,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625298539",
  "nonceStr": "Wr37gdExhqEaBkT1",
  "packAge": "prepay_id\u003dwx03154854751898335ca8507f2f23680000",
  "signType": "MD5",
  "paySign": "AD61A0FF6C40A30BC1A6648A3BF42785"
}
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@48d5f34e: startup date [Sat Jul 03 15:45:16 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closing ...
{dataSource-1} closed
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 63907 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@517566b: startup date [Sat Jul 03 15:50:57 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3188 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@517566b: startup date [Sat Jul 03 15:50:57 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create]}" onto public com.imooc.VO.ResultVO com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 13.788 seconds (JVM running for 15.157)
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@517566b: startup date [Sat Jul 03 15:50:57 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closing ...
{dataSource-1} closed
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 63916 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@48d5f34e: startup date [Sat Jul 03 15:52:43 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 8007 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@48d5f34e: startup date [Sat Jul 03 15:52:43 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create]}" onto public com.imooc.VO.ResultVO com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 18.462 seconds (JVM running for 19.897)
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@48d5f34e: startup date [Sat Jul 03 15:52:43 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closing ...
{dataSource-1} closed
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 63941 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2da59753: startup date [Sat Jul 03 15:54:49 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3364 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2da59753: startup date [Sat Jul 03 15:54:49 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create]}" onto public com.imooc.VO.ResultVO com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 13.645 seconds (JVM running for 14.914)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2F97tq6t.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2F97tq6t.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_v-FFJ3N6eb3N9ufyv2r9WDalmMo_Bd4Ag_ek-D41-Zw4k4jQEZ_sq8IzwndUvAmDjPHFVL49PkBV4rMeKM6DQQ",
  "expiresIn": 7200,
  "refreshToken": "46_n-ec0tPijplO0FpGc1nC5omLnBvFPPmG7QUJgNCy09N_1c1wPApz91yFkFHVgPmBhsKLAdytszTjIWav4HCwkw",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://97tq6t.natappfree.cc
HHH000397: Using ASTQueryTranslatorFactory
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "69",
  "orderAmount": 6.6,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625298964",
  "nonceStr": "nXtK2qWupqodt3x6",
  "packAge": "prepay_id\u003dwx03155550280502fffe91a563412ac80000",
  "signType": "MD5",
  "paySign": "8CDCD996D92F1CBD430D290C3DB173B1"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "70",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625299066",
  "nonceStr": "lq29ELJ1xRRrJckZ",
  "packAge": "prepay_id\u003dwx03155742025584b1daec886237b1ce0000",
  "signType": "MD5",
  "paySign": "D9686520121BBC21B8654E8B22C96CA5"
}
put physical connection to pool failed.
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "71",
  "orderAmount": 8.8,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625299190",
  "nonceStr": "7orXYdAX4fqLDFjG",
  "packAge": "prepay_id\u003dwx031559397698689dad574b8210f2610000",
  "signType": "MD5",
  "paySign": "46A41B5FC890C6EA5CE07A6DB4C9440A"
}
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2da59753: startup date [Sat Jul 03 15:54:49 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closing ...
{dataSource-1} closed
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 63975 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@48d5f34e: startup date [Sat Jul 03 16:03:19 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3324 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@48d5f34e: startup date [Sat Jul 03 16:03:19 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create]}" onto public com.imooc.VO.ResultVO com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 30.451 seconds (JVM running for 31.962)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 22 ms
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2F97tq6t.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2F97tq6t.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_LHoTvVMRjze4PigH7aKiQRwaxuOfaW3HzCR3hghywzAVejED5_1SKu1ZC2fKhgQX_tbYG3oKDRP77474xuyXEQ",
  "expiresIn": 7200,
  "refreshToken": "46_Y7J3cJl-cirvev3d4_5fUMsCPHYONNPQEK9rAAyPbMJZvRi0Hx9pld_g22rM4IxTOggHfRXkEv3v8dburPoryA",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://97tq6t.natappfree.cc
HHH000397: Using ASTQueryTranslatorFactory
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "73",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625299495",
  "nonceStr": "UTObkOPA8CcYgZIR",
  "packAge": "prepay_id\u003dwx03160455423042b0a2880c9d85271e0000",
  "signType": "MD5",
  "paySign": "4924F8396B5626FE5BFC8A0F062AEC4D"
}
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2F97tq6t.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2F97tq6t.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_rNk44qavhYVGmV3-gEoyoNaPCiLRATWQ2QlAsM6UiasFlSz3uwmsXmqu3HGh5cfIMC1FLotV-4-a0nq9ZSn6dg",
  "expiresIn": 7200,
  "refreshToken": "46_6ZMjb5qVQPVOyofhv5bix438B412Sl6g5_q01fRBlWxGa404BVsnTGOAnd3qziAGmL2jTXf7DC1x8eakugC9gA",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://97tq6t.natappfree.cc
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "74",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625299581",
  "nonceStr": "tAy5KOYaOYgkGr2l",
  "packAge": "prepay_id\u003dwx03160621146469e779cfae1664ce580000",
  "signType": "MD5",
  "paySign": "1925314E7E414EA5D05A300E8B1A1A07"
}
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2F97tq6t.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2F97tq6t.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_SRN2iQfelPoldLftWGrHD2ZtMQmF5rcIQsRgn0XPvLmiUx8mh3cgV7rJG-gJFDEoca3ERNK5tYha0PQ9iWPTWg",
  "expiresIn": 7200,
  "refreshToken": "46_guCTRJDncIwE4z8iWJ8S_03nueCNkIWbBAzZv4n-WfIEeCFP_ELL0m3trhV_3IcIwyoinh15iciLf7LTwoTINw",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://97tq6t.natappfree.cc
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "75",
  "orderAmount": 8.8,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625299898",
  "nonceStr": "Ef35496Z3pY0QCeX",
  "packAge": "prepay_id\u003dwx03161138431151ec91eed1e5d47f610000",
  "signType": "MD5",
  "paySign": "E94CE1512A76521AEDAF1686E9C7C685"
}
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2F97tq6t.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2F97tq6t.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_Xu6kSMP-xGGM3PfHaZjCekjRJl7XHGjT35L6h-oocXP-RTbENrDkWqqtpMjiWDNU4eJmyhjvMx6KMu4Hwusbww",
  "expiresIn": 7200,
  "refreshToken": "46_HU9yiEiTLvY9qLCnnJKgDPYo85KXMiIV7C9A1BugKISDQ7zgEQOyCxEvkV_9pz8WYKqLOf0ALOt7dWz4JStIVA",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://97tq6t.natappfree.cc
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "76",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625300182",
  "nonceStr": "0JxTzyjbQxCW4KsD",
  "packAge": "prepay_id\u003dwx031616225206876b093eb0cd5dd3800000",
  "signType": "MD5",
  "paySign": "C8FDE2BB0A7CD08B4580E28CCC2F2FB1"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "77",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625300242",
  "nonceStr": "q1yALEwlu9ktG7iK",
  "packAge": "prepay_id\u003dwx031617222050016135a574e142b2430000",
  "signType": "MD5",
  "paySign": "88538D4AB29A3D4FC22CB871D035C387"
}
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2F97tq6t.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2F97tq6t.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_p537Jvi4YkyT8p4pH5BF-HHYxIM_AGEYWypT5Gwi1fAi4bPC8hiq6dBS4qF5VJQD80aP3oGpCKoytjgdNenRgQ",
  "expiresIn": 7200,
  "refreshToken": "46_iNOHFN0BekdaIDmMx8Y6k94v23HZqrmGcxV_D_i99w2nUcKv_OalJzdRoL040Fk_ObzH3LXyAQtkPAVITzy7kg",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://97tq6t.natappfree.cc
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "78",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625300283",
  "nonceStr": "Z7buwD7KcfZzoEFL",
  "packAge": "prepay_id\u003dwx03161803144978a447bfd9ca67337c0000",
  "signType": "MD5",
  "paySign": "97AC24CC307C57941430FAF9E3B42D09"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "79",
  "orderAmount": 8.8,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625300467",
  "nonceStr": "Aa5zmwNJnBeO9VAe",
  "packAge": "prepay_id\u003dwx03162107380461991e12b7c3da3c580000",
  "signType": "MD5",
  "paySign": "4A2E7B301A64DBC03DBFF93570EFC053"
}
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2F97tq6t.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2F97tq6t.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_9NaOUZDj1GsEHm_ko93o_CZWq5uLGLscKL1wKMmhhD2YaE0iuKXxKu2j4FfyXUwXGGbmM8tU-7kPoLfTk2UlXg",
  "expiresIn": 7200,
  "refreshToken": "46_zX6Kg9nXh_Ct-RJz9qsOmDTpdLj_OZj7R7vbvbRAqcOWf8sogv0hvOGxPnXY0VXc--arYDDIlH6kn1hN6FlFiw",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://97tq6t.natappfree.cc
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "80",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625300665",
  "nonceStr": "22GA5WhQ4RHVAhQz",
  "packAge": "prepay_id\u003dwx03162425554757847d1f366c2d5a630000",
  "signType": "MD5",
  "paySign": "6D2CEA7589BA34CD68AD34BD63B9E71A"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "81",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625300693",
  "nonceStr": "g1mJt0xeITjmBhfm",
  "packAge": "prepay_id\u003dwx03162452991647d45fb28886961ba40000",
  "signType": "MD5",
  "paySign": "FDC7CE66747A49D801E86869DF18C377"
}
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2F97tq6t.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fkfprh4.natappfree.cc#wechat_redirect
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@48d5f34e: startup date [Sat Jul 03 16:03:19 CST 2021]; root of context hierarchy
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 64181 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@542e560f: startup date [Sat Jul 03 16:38:24 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3504 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
put physical connection to pool failed.
put physical connection to pool failed.
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 64194 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6d3c5255: startup date [Sat Jul 03 16:39:23 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2885 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 64200 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@50468873: startup date [Sat Jul 03 16:40:24 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2779 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@50468873: startup date [Sat Jul 03 16:40:24 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create]}" onto public com.imooc.VO.ResultVO com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 18.446 seconds (JVM running for 19.775)
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@50468873: startup date [Sat Jul 03 16:40:24 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closing ...
{dataSource-1} closed
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 64233 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@48d5f34e: startup date [Sat Jul 03 16:41:37 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4317 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@48d5f34e: startup date [Sat Jul 03 16:41:37 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create]}" onto public com.imooc.VO.ResultVO com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 14.654 seconds (JVM running for 16.303)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 26 ms
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fiz5kkm.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fiz5kkm.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_GQZ8qGoM5v21JkGpA7urMndOeO4udjhdJwgHCZi0K4xnVPyc9L-33qzaQMh2kbrlXzhVw5EtOd-zGaxEwOEcLQ",
  "expiresIn": 7200,
  "refreshToken": "46_5oN0nfqToLo7amqaW1SgeAbSDNAQxgFUfCouLNMhsJaQSZ8MRr2KxE0b8WiGybW7ZTDAH3x7Twzu3NupIPbRwA",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://iz5kkm.natappfree.cc
HHH000397: Using ASTQueryTranslatorFactory
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fiz5kkm.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fiz5kkm.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_QnrMrr3lewkHRc-H-fGh1aBPwEVZuNk-WipvtFr2Zv3aWs-iaL4m2ePX9NwZIZKt6XbSqd0-HsUrB412DAi7cw",
  "expiresIn": 7200,
  "refreshToken": "46_9NaOUZDj1GsEHm_ko93o_OURyn5V66w_o1yOKp8dPI-gU1ZuGmkm3SYYKag_CVBgUJhd3cPmzMaJ-EVwPi116A",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://iz5kkm.natappfree.cc
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "85",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625302068",
  "nonceStr": "vqlYQdPdGWFh1Nzg",
  "packAge": "prepay_id\u003dwx0316474879732692c7218ad80c227e0000",
  "signType": "MD5",
  "paySign": "7796F17450FF68A497511751A7230BC4"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "86",
  "orderAmount": 8.8,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625302375",
  "nonceStr": "eQ8GHaiXlMLPfgqP",
  "packAge": "prepay_id\u003dwx03165255791132c4319c3adfc816640000",
  "signType": "MD5",
  "paySign": "6FABE839577FDA0A50CFDB025F8103CB"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "87",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625302393",
  "nonceStr": "yu6ovE0pJKrfFwmv",
  "packAge": "prepay_id\u003dwx0316531308175502cb02c5c3fe91d50000",
  "signType": "MD5",
  "paySign": "8382E4756009A22E369A008BF7D37012"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "88",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625302439",
  "nonceStr": "uDX7VxYCoOw0G6wf",
  "packAge": "prepay_id\u003dwx031653591485851ffa269ad8947ea70000",
  "signType": "MD5",
  "paySign": "9F6E077E10745D5705A754E4F9B56823"
}
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@48d5f34e: startup date [Sat Jul 03 16:41:37 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closing ...
{dataSource-1} closed
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 64380 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5629510: startup date [Sat Jul 03 17:05:43 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3466 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5629510: startup date [Sat Jul 03 17:05:43 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/payStatus],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.payStatus(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create]}" onto public com.imooc.VO.ResultVO com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 13.586 seconds (JVM running for 15.085)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 24 ms
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fiz5kkm.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fiz5kkm.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_7D8ojELbeVapKbV8iFR97Kt2AYUJVfPWmnlISJbR02e1-RRLOhBmvrUrfV6KwBuccQS-dgecs4pC4a-TwKvp7g",
  "expiresIn": 7200,
  "refreshToken": "46_R8G8923wKP_s6YB7428bxXXh0s80vwjdu9eSkrjEuhjYaTSLFTdLWFShh0-tiMaa7Sbvnll_VYMQTcPEm5JrCg",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://iz5kkm.natappfree.cc
HHH000397: Using ASTQueryTranslatorFactory
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fiz5kkm.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fiz5kkm.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_rNk44qavhYVGmV3-gEoyoE86SQIJT41ArOxYKzOVZbjNshKKC6N86T4Pdg9zFYUil12G6WbANVxHMZVn0hyRhg",
  "expiresIn": 7200,
  "refreshToken": "46_2D_BjOhZ3_k6YFt7E1g_ktiepbPOrS_vnutXAls647i2viijbH0Z1IY5GJ_9JwTU4_4ELtxTGY77dnTSgGDV_A",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://iz5kkm.natappfree.cc
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fiz5kkm.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fiz5kkm.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_nxBai9bpcuXtepAwxcBH4Rii36LRcFf473xZu_w6qeNgCVgX8pJZGWLmH4-6mQXl2fKv4iWQU3tWYKWNA9lNXQ",
  "expiresIn": 7200,
  "refreshToken": "46_Xu6kSMP-xGGM3PfHaZjCeq9JLPUYk6VC3l9lbsYJQStUsHqIJC4Nan_5u1C8sHB0njKLgru3jC1I2-S3ilUjug",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://iz5kkm.natappfree.cc
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5629510: startup date [Sat Jul 03 17:05:43 CST 2021]; root of context hierarchy
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 64461 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@241e8ea6: startup date [Sat Jul 03 17:22:24 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3800 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@241e8ea6: startup date [Sat Jul 03 17:22:24 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/payStatus],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.payStatus(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create]}" onto public com.imooc.VO.ResultVO com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 13.968 seconds (JVM running for 16.49)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 85 ms
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2F7399mp.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2F7399mp.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_slVwzZr2CDtMpmXsOcolFCiX0E9CT2U_CS6IYsAYV5Q1NBmik5BU4sHiBwvyDsyiAx8HFsedeOpDVGvz3NHrfA",
  "expiresIn": 7200,
  "refreshToken": "46_XuIreM9oNWj-gC_OcRy-rMK-VW3fMf40vahNAVi5Mt9jrHJRFZTFsRi7UFkAhQC9qQBcIVDkau0FiJCjxzWlag",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://7399mp.natappfree.cc
HHH000397: Using ASTQueryTranslatorFactory
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2F7399mp.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2F7399mp.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_GXC9ZwNb-iLrX79_520EOdvf44D20ffI1ZvVfDX6eC-2_svgpPYb1WYNmdu8tLnY0jbB1jB8U01fjPueTlcUeg",
  "expiresIn": 7200,
  "refreshToken": "46_TrDTGAZOV8ZJFEULgF9FEsYh7QwooZGomlpQWlZzjAMZK0iJnSH5zYY-i2kE-6rZRyqpLNzBn_BZFNspuQLEFg",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://7399mp.natappfree.cc
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "12",
  "orderAmount": 14.0,
  "orderName": "微信点餐订单",
  "openid": "ohp986V0mgU0DsnMtOxR4KysZuRI"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "12",
  "orderAmount": 14.0,
  "orderName": "微信点餐订单",
  "openid": "ohp986V0mgU0DsnMtOxR4KysZuRI"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "11",
  "orderAmount": 6.6,
  "orderName": "微信点餐订单",
  "openid": "ohp986V0mgU0DsnMtOxR4KysZuRI"
}
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2F7399mp.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2F7399mp.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_Y7J3cJl-cirvev3d4_5fUGMQjRF4a-XqxWID7CcqCyFCbCf8vIzJ168_eAGykXo0nbx-Ypj5mezz56Z7XsI-Pg",
  "expiresIn": 7200,
  "refreshToken": "46_v-FFJ3N6eb3N9ufyv2r9WJfvJKAyEVVHTdjR_Q-tPRSx1V5N7_9Tr-h6V5peTKCniXc4GI5DoorPI6M2e6MwVw",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://7399mp.natappfree.cc
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "101",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625306296",
  "nonceStr": "nSHgCwwVpOM9BSfF",
  "packAge": "prepay_id\u003dwx03175816239667df6400aba470193f0000",
  "signType": "MD5",
  "paySign": "C91B01CED4B14E82B227D842A994C7FD"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "102",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625306408",
  "nonceStr": "fLgM3xy0lRCAR3V2",
  "packAge": "prepay_id\u003dwx0318000837690594b05b551c9817c50000",
  "signType": "MD5",
  "paySign": "BAB88E3C3F6FFCCCACCCB1F3B4C15D24"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "103",
  "orderAmount": 14.0,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625306456",
  "nonceStr": "JS5njRo5HFkMqBLN",
  "packAge": "prepay_id\u003dwx03180056231183892131c65f73532b0000",
  "signType": "MD5",
  "paySign": "8B1C829F98E787DE581DB5727D1EBDA0"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "104",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625306479",
  "nonceStr": "L3JbgdlcrMujHV1f",
  "packAge": "prepay_id\u003dwx031801191475011368075ae08099250000",
  "signType": "MD5",
  "paySign": "07AFEC9CD32593979F7CCE1F07FCAFF8"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "105",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625306500",
  "nonceStr": "Wj5KqqeBu2A7JH7D",
  "packAge": "prepay_id\u003dwx03180140373768ed6309858ebdc1910000",
  "signType": "MD5",
  "paySign": "FAC292682540A305232251A48A988315"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "106",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625306588",
  "nonceStr": "PstfT5RzupTRGJvE",
  "packAge": "prepay_id\u003dwx0318030750883787c4b4dc623130930000",
  "signType": "MD5",
  "paySign": "AEF19FB402D8B989DCCF540A4BA2B33C"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "107",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625306640",
  "nonceStr": "1JXmniYKkcBUKklN",
  "packAge": "prepay_id\u003dwx031804007807002ef5a036a90d63750000",
  "signType": "MD5",
  "paySign": "34781542C9E8B672088C9852853512EF"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "108",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625306647",
  "nonceStr": "fn19J698K5wRfXlY",
  "packAge": "prepay_id\u003dwx03180407927567aea718693903373b0000",
  "signType": "MD5",
  "paySign": "F9145C0A4D09D3FF93AFEABAC121062F"
}
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@241e8ea6: startup date [Sat Jul 03 17:22:24 CST 2021]; root of context hierarchy
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 64633 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4fce136b: startup date [Sat Jul 03 18:08:50 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3053 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4fce136b: startup date [Sat Jul 03 18:08:50 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/payStatus],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.payStatus(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create]}" onto public com.imooc.VO.ResultVO com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 11.989 seconds (JVM running for 16.924)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2F7399mp.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2F7399mp.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_UW2_bt99X0aQEM4q4GKAxgzChrU5PTiXbVzWEwhVdADyNfaPcV_RECokQt7R0ianFKu-jIA_PRgDqoN50_m15Q",
  "expiresIn": 7200,
  "refreshToken": "46_q3x33MsRdwC2C07oxADpt_-2tTKb9fzI42ZDRI-YHv7NpYLwqY_ZMCMkAq85sUXK1u_TDxIXLPPHJrvNdqeLzw",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://7399mp.natappfree.cc
HHH000397: Using ASTQueryTranslatorFactory
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "109",
  "orderAmount": 0.1,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625307067",
  "nonceStr": "8PZ0yTdNYKfKOz8d",
  "packAge": "prepay_id\u003dwx03181107347776237c75da64ed7f9a0000",
  "signType": "MD5",
  "paySign": "D9AE633A775FFAB13066C0A81E6A6D3D"
}
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4fce136b: startup date [Sat Jul 03 18:08:50 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 64812 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@517566b: startup date [Sat Jul 03 18:34:10 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3876 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@517566b: startup date [Sat Jul 03 18:34:10 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/payStatus],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.payStatus(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/PushpayStatus],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.PushpayStatus(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create]}" onto public com.imooc.VO.ResultVO com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 15.588 seconds (JVM running for 17.4)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 29 ms
HHH000397: Using ASTQueryTranslatorFactory
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@517566b: startup date [Sat Jul 03 18:34:10 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closing ...
{dataSource-1} closed
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 64924 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@51972dc7: startup date [Sat Jul 03 18:58:17 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 6806 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@51972dc7: startup date [Sat Jul 03 18:58:17 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/payStatus],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.payStatus(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/PushpayStatus],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.PushpayStatus(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create]}" onto public com.imooc.VO.ResultVO com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 18.479 seconds (JVM running for 20.63)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 43 ms
HHH000397: Using ASTQueryTranslatorFactory
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@51972dc7: startup date [Sat Jul 03 18:58:17 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closing ...
{dataSource-1} closed
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 64968 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@48d5f34e: startup date [Sat Jul 03 19:06:05 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3456 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@48d5f34e: startup date [Sat Jul 03 19:06:05 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/payStatus],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.payStatus(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/PushpayStatus],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.PushpayStatus(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create]}" onto public com.imooc.VO.ResultVO com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 16.271 seconds (JVM running for 18.252)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 26 ms
HHH000397: Using ASTQueryTranslatorFactory
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fwf66fd.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fwf66fd.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46__aDuoooRRVi_ikHLgeMuZv85WfLzKgJiqiOfoPUBMgjkda6lQNtIqCejls2FmEkeVpN6tLPtDA81JP8IgDyM_g",
  "expiresIn": 7200,
  "refreshToken": "46_zX6Kg9nXh_Ct-RJz9qsOmCRcIHd2vlO3IdiBxKw9bTr6vt4fhUrUeT5E7KqWTst_FlPxI8v9rL4zTSfvOk9V_w",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://wf66fd.natappfree.cc
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fwf66fd.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fwf66fd.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_XfbWTUDcCqVH6ZRhYxNwOkynXR309ntozTKsSQgBOKQz6QgWdD93DeHhR7Dwl-nnkd3emYmHxANB4i1KCgbTOQ",
  "expiresIn": 7200,
  "refreshToken": "46_FXWFtTS2vQtdg9ndwYplW2n7W5p4hn9ZiroU719ftgqDa1gLfXfya2bpVhWwvAdLZI8hYoWamhI5l2ti-sRndw",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://wf66fd.natappfree.cc
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fwf66fd.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fwf66fd.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_Q8fVyuMRARDdmB6YTBQPCykwlf2i4l5tIRNpvyEINnqL-ozmVfmDlMM3rs25MJKbz2UoKhFtm_IievMutrMHkQ",
  "expiresIn": 7200,
  "refreshToken": "46_s3Cuk89CI1uD2UHZSlieooIREumt0RuT1vY9uWe584jbqNQFxzXtrv8DjvUNvQB0_ob1kItu1hxtOxthdA_NDA",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://wf66fd.natappfree.cc
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fwf66fd.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fwf66fd.natappfree.cc%2Fview%2Fdetail.html#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_eLq1qGlpMETUh0L1IfiIuF7Grf8kIOggH7SzppAsoAabkDK1hGrHDJ5lTHodG7a5FkurRi9ExOqQSuCM2CIjWPha90sOkW59QIha8zfDeY8",
  "expiresIn": 7200,
  "refreshToken": "46_UmppbZzd7T875VTwYFw8dkevKI_DBlJnNzTZdul8ivHrzhNq2xTUo-OpAHdS0pEAD8-pZWN1KVZEd3Xc5vwg4bf3ZLggqiqSFN1_qk_IxnA",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://wf66fd.natappfree.cc/view/detail.html
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "110",
  "orderAmount": 8.8,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625311674",
  "nonceStr": "dBEmG7agtgvP98BD",
  "packAge": "prepay_id\u003dwx031927543978393749a612fcee89ac0000",
  "signType": "MD5",
  "paySign": "F4EBE8EE3C9ACB5968EC425F6AB2DD05"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "111",
  "orderAmount": 0.66,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625311756",
  "nonceStr": "rQ4c5x6w2eXuuq26",
  "packAge": "prepay_id\u003dwx03192916145402b97f9eccab8cc15c0000",
  "signType": "MD5",
  "paySign": "7E50A5EDC65BB4E46892F4957326C372"
}
Request method 'GET' not supported
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "112",
  "orderAmount": 0.66,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625311857",
  "nonceStr": "bc52XB95j0kXCGKe",
  "packAge": "prepay_id\u003dwx031930575769335797f612e07532130000",
  "signType": "MD5",
  "paySign": "D68EC139CB0151E742633F5616A4A8D8"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "113",
  "orderAmount": 0.66,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625311963",
  "nonceStr": "RDyid0JhJ3WqB1il",
  "packAge": "prepay_id\u003dwx03193243096214861eea6fa7d2c1bc0000",
  "signType": "MD5",
  "paySign": "4714DB6F29F4AE08D4933934A072B996"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "114",
  "orderAmount": 0.66,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625312248",
  "nonceStr": "SpCQnY28ptBIj615",
  "packAge": "prepay_id\u003dwx031937283803514d53e072df7c50020000",
  "signType": "MD5",
  "paySign": "0AFD268C372AA3063D7B811F53837640"
}
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@48d5f34e: startup date [Sat Jul 03 19:06:05 CST 2021]; root of context hierarchy
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 65177 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@24d09c1: startup date [Sat Jul 03 19:39:22 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3697 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@24d09c1: startup date [Sat Jul 03 19:39:22 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/payStatus],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.payStatus(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/PushpayStatus],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.PushpayStatus(java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create]}" onto public com.imooc.VO.ResultVO com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 12.201 seconds (JVM running for 14.731)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 26 ms
HHH000397: Using ASTQueryTranslatorFactory
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "115",
  "orderAmount": 0.01,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625312561",
  "nonceStr": "73rVsxj9FPQgeBfp",
  "packAge": "prepay_id\u003dwx03194241698053df047d2e424b9f290000",
  "signType": "MD5",
  "paySign": "D73ADF29CB93BD628C3DE3A91D99FCD7"
}
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fwf66fd.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fwf66fd.natappfree.cc#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_1kPl3M-lHn-ZXEGSjRxvT2t5IIR-CnwAMNLuSNedZcSmkKUfp0fd7vmolw3qo3k0ITPW0-nqHaRRYJRqq7N8YQ",
  "expiresIn": 7200,
  "refreshToken": "46_cHTzPpfXepMEZh9BFB86CMVIMqW26Vcs8t4IGoGR69TvXKzav6k7hqEiU5KTg1QtxIN-u5UYyqwl74NB-2T4WQ",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://wf66fd.natappfree.cc
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "117",
  "orderAmount": 0.01,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625312806",
  "nonceStr": "SAi89fc2XkacVJZp",
  "packAge": "prepay_id\u003dwx03194646256002fac8a5a6dfdcf0a10000",
  "signType": "MD5",
  "paySign": "2EA55920BDB4A51D1787F54104EED179"
}
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@24d09c1: startup date [Sat Jul 03 19:39:22 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closing ...
{dataSource-1} closed
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 65207 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@48d5f34e: startup date [Sat Jul 03 19:51:25 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2820 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@48d5f34e: startup date [Sat Jul 03 19:51:25 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/payStatus],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.payStatus(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/PushpayStatus],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.PushpayStatus(java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create]}" onto public com.imooc.VO.ResultVO com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 10.854 seconds (JVM running for 12.644)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 48 ms
HHH000397: Using ASTQueryTranslatorFactory
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "118",
  "orderAmount": 0.01,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625313138",
  "nonceStr": "QuGu6NqKj0UZvv92",
  "packAge": "prepay_id\u003dwx031952178895443490c32789e16c800000",
  "signType": "MD5",
  "paySign": "44BE27F2564BD65004775BD92407C1A0"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "120",
  "orderAmount": 0.01,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625313290",
  "nonceStr": "Pat96AK5zeAHEimk",
  "packAge": "prepay_id\u003dwx031954503368355776df6aef33bf1a0000",
  "signType": "MD5",
  "paySign": "89A43C95F330BD9953DA7940507D7A7C"
}
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@48d5f34e: startup date [Sat Jul 03 19:51:25 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closing ...
{dataSource-1} closed
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 65241 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@50468873: startup date [Sat Jul 03 20:01:38 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3543 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@50468873: startup date [Sat Jul 03 20:01:38 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/payStatus],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.payStatus(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/PushpayStatus],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.PushpayStatus(java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create]}" onto public com.imooc.VO.ResultVO com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 15.474 seconds (JVM running for 17.284)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 53 ms
HHH000397: Using ASTQueryTranslatorFactory
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@50468873: startup date [Sat Jul 03 20:01:38 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closing ...
{dataSource-1} closed
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 65267 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@615091b8: startup date [Sat Jul 03 20:06:50 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3583 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@615091b8: startup date [Sat Jul 03 20:06:50 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/payStatus],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.payStatus(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/PushpayStatus],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.PushpayStatus(java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create]}" onto public com.imooc.VO.ResultVO com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 12.431 seconds (JVM running for 14.239)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 35 ms
HHH000397: Using ASTQueryTranslatorFactory
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "123",
  "orderAmount": 8.8,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625314117",
  "nonceStr": "yGq5z4jMnBakUpXz",
  "packAge": "prepay_id\u003dwx0320083685089332132207ad90f7e90000",
  "signType": "MD5",
  "paySign": "2B41365FDED360C3586D85BD543C8D48"
}
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@615091b8: startup date [Sat Jul 03 20:06:50 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closing ...
{dataSource-1} closed
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 65278 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@48d5f34e: startup date [Sat Jul 03 20:09:28 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 6935 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@48d5f34e: startup date [Sat Jul 03 20:09:28 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/payStatus],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.payStatus(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/PushpayStatus],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.PushpayStatus(java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create]}" onto public com.imooc.VO.ResultVO com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 17.49 seconds (JVM running for 19.574)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 26 ms
HHH000397: Using ASTQueryTranslatorFactory
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@48d5f34e: startup date [Sat Jul 03 20:09:28 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closing ...
{dataSource-1} closed
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 65345 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@542e560f: startup date [Sat Jul 03 20:34:56 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3961 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@542e560f: startup date [Sat Jul 03 20:34:56 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/payStatus],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.payStatus(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/PushpayStatus],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.PushpayStatus(java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create]}" onto public com.imooc.VO.ResultVO com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 15.849 seconds (JVM running for 17.666)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
【微信网页授权】获取code,redirectUrl=https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx8ea6fc446e2448ea&redirect_uri=http%3A%2F%2Fwf66fd.natappfree.cc%2Fsell%2Fwechat%2FuserInfo&response_type=code&scope=snsapi_userinfo&state=http%3A%2F%2Fwf66fd.natappfree.cc%2Fview%2Fdetail.html#wechat_redirect
wxMpOAuth2AccessToken={
  "accessToken": "46_FiUs1qScSAz03LIWBNHyLIwB2jmPiO49PsfmniVtjeT1vr5OAMeeebPJS-4davgX4LygNdmSyuruz_RxfRzF5se2krTzCGsf9J5Cr3aWAiA",
  "expiresIn": 7200,
  "refreshToken": "46_dVOJIiuC2MRT4Xg4D4rg33IfMWiYEBS7VljRgvVHIW6QjaRlx8XrB4soYUiDhpUqkT6ssmIg8tkE_MhG4XIFhk_RqTAJbAu6GTCdnLwAJvk",
  "openId": "o78R75zW0BCJIG2qUlMYpK3S1i-g",
  "scope": "snsapi_userinfo"
}
【微信网页授权】获取openid,returnUrl=http://wf66fd.natappfree.cc/view/detail.html
HHH000397: Using ASTQueryTranslatorFactory
put physical connection to pool failed.
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@542e560f: startup date [Sat Jul 03 20:34:56 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closing ...
{dataSource-1} closed
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 65360 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5629510: startup date [Sat Jul 03 20:41:02 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3155 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5629510: startup date [Sat Jul 03 20:41:02 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/payStatus],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.payStatus(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/PushpayStatus],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.PushpayStatus(java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create]}" onto public com.imooc.VO.ResultVO com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 12.28 seconds (JVM running for 13.608)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 29 ms
HHH000397: Using ASTQueryTranslatorFactory
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "124",
  "orderAmount": 14.0,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625316229",
  "nonceStr": "Kl9XT7EMLRbTmmnE",
  "packAge": "prepay_id\u003dwx03204349703599b91b7f15e2aac1c30000",
  "signType": "MD5",
  "paySign": "C1E40A49C431BE80D54FAA0035731C42"
}
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5629510: startup date [Sat Jul 03 20:41:02 CST 2021]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closing ...
{dataSource-1} closed
Starting SellApplication on wangjingzhoudeMacBook-Air.local with PID 65386 (/Users/wangjz/IdeaProjects/springboot-project/target/classes started by wangjz in /Users/wangjz/IdeaProjects/springboot-project)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@55322aab: startup date [Sat Jul 03 20:50:05 CST 2021]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.UserInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderDetailRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.repository.ProductInfoRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3311 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Init DruidDataSource
{dataSource-1} inited
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@55322aab: startup date [Sat Jul 03 20:50:05 CST 2021]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public com.imooc.VO.ResultVO<java.util.Map<java.lang.String, java.lang.String>> com.imooc.controller.BuyerOrderController.create(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public com.imooc.VO.ResultVO<java.util.List<com.imooc.dto.OrderDTO>> com.imooc.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/payStatus],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.payStatus(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/PushpayStatus],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.PushpayStatus(java.lang.String)
Mapped "{[/buyer/order/advice1],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus1(java.lang.String)
Mapped "{[/buyer/order/advice2],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userStatus2(java.lang.String)
Mapped "{[/buyer/order/userAdvice],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.userAdvice(java.lang.String)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO<com.imooc.dto.OrderDTO> com.imooc.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.list()
Mapped "{[/buyer/product/detail],methods=[GET]}" onto public com.imooc.VO.ResultVO com.imooc.controller.BuyerProductController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/pay],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.index(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create]}" onto public com.imooc.VO.ResultVO com.imooc.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/thirdApi/qiniu/img],methods=[POST]}" onto public java.lang.String com.imooc.controller.QiniuApi.upImg(org.springframework.web.multipart.MultipartFile) throws java.io.IOException
Mapped "{[/skill/query/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.query(java.lang.String) throws java.lang.Exception
Mapped "{[/skill/order/{productId}],methods=[GET]}" onto public java.lang.String com.imooc.controller.SecKillController.skill(java.lang.String) throws java.lang.Exception
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerCategoryController.save(com.imooc.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.finished(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerOrderController.cancle(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.save(com.imooc.form.ProductForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.login(java.lang.String,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.imooc.controller.SellerUserController.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/checkToken],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.imooc.controller.TokenController.checkToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.userInfo(java.lang.String,java.lang.String) throws java.lang.Exception
Mapped "{[/wechat/redirectGetUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.getUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String com.imooc.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void com.imooc.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellerExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Adding welcome page: class path resource [static/index.html]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class com.imooc.service.WebSocket
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 11.544 seconds (JVM running for 13.044)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 32 ms
HHH000397: Using ASTQueryTranslatorFactory
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "125",
  "orderAmount": 0.01,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625316757",
  "nonceStr": "D8FauvRfLNodpyiG",
  "packAge": "prepay_id\u003dwx03205237428006f2b9624242d782c50000",
  "signType": "MD5",
  "paySign": "3496A92B3AFBA3269267629A78524D35"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "126",
  "orderAmount": 0.01,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625316785",
  "nonceStr": "m59l8xlpMxuatyFA",
  "packAge": "prepay_id\u003dwx0320530516331759db1a3f1a58be700000",
  "signType": "MD5",
  "paySign": "B2CF810777861DB2A0B30E3A5DD940F0"
}
【微信支付】发起支付，request={
  "payTypeEnum": "WXPAY_H5",
  "orderId": "127",
  "orderAmount": 0.01,
  "orderName": "微信点餐订单",
  "openid": "o78R75zW0BCJIG2qUlMYpK3S1i-g"
}
【微信支付】发起支付，response={
  "appId": "wx8ea6fc446e2448ea",
  "timeStamp": "1625316857",
  "nonceStr": "DoTtAIGbPo3RUuIq",
  "packAge": "prepay_id\u003dwx03205417112071dcb2f1bccd7c07cf0000",
  "signType": "MD5",
  "paySign": "B5E8733EC38CB66B586D07FC005D7816"
}
